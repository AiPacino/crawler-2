server: 
  port: 1256
logging:
  file: common-microservice-bank-etl-1256.log
  level: 
    com.gargoylesoftware.htmlunit.javascript.StrictErrorReporter : OFF
    com.gargoylesoftware.htmlunit.javascript.host.ActiveXObject : OFF
    com.gargoylesoftware.htmlunit.host.html.HTMLDocument : OFF
    com.gargoylesoftware.htmlunit.html.HtmlScript : OFF
    org.springframework.boot.env.PropertySourcesLoader: TRACE
    org.springframework.web: DEBUG
management: 
  security: 
    enabled: false
eureka:
  client:
    serviceUrl:
      defaultZone: http://eurekaserver:8888/eureka/


#数据源：
spring:
  cloud:
    stream:
      bindings: 
        input:                             # 频道名称（根据具体模块来命名）
          destination: bank-topic-01                   
          group: etl_group             # 消费者组订阅是持久的，如果你的应用指定了group，那即便你这个组下的所有应用实例都挂掉了，你的应用也会在重新启动后从未读取过的位置继续读取
          binder: kafka_binder
      binders: 
        kafka_binder: 
          type: kafka 
          environment:
            spring.cloud.stream.kafka.binder.brokers: ${kafka.brokers}
            spring.cloud.stream.kafka.binder.zk-nodes: ${kafka.zknodes}
  datasource:
    schema: classpath:/datasource/*.sql
    initialize: ${datasource.initialization-mode}
    continueOnError: true
    hikari: 
      minimum-idle: ${datasource.jdbc.minIdle}
      maximum-pool-size: ${datasource.jdbc.maxPoolSize}
    driver-class-name: ${datasource.jdbc.driver}
    url: ${datasource.jdbc.url}
    username: ${datasource.jdbc.username}
    password: ${datasource.jdbc.password}
    type: ${datasource.jdbc.type}
  jpa: 
    show-sql: true
    hibernate: 
        ddl-auto: update 
        naming: 
          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl 
          
    properties:  
      hibernate:  
#       dialect: com.microservice.persistence.SRDB10Dialect
        dialect: ${datasource.jdbc.dialect}
#       dialect: org.hibernate.dialect.MySQLDialect
        temp: 
          use_jdbc_metadata_defaults: false #此处是为了解决启动时报错createClob()方法为实现          
          

