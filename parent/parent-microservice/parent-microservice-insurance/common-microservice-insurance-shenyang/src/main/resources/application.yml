server: 
  port: 44444
info:
  contact: 
    email: dimei1@creditharmony.cn
logging: 
  file: common-microservice-insurance-shenyang-9001.log
  level:  
    org.springframework.boot.env.PropertySourcesLoader: TRACE
    org.springframework.web: INFO
# Spring boot UI 页面关闭该应用的权限限制
management: 
  security: 
    enabled: false
eureka: 
  client: 
    serviceUrl: 
      defaultZone: http://eurekaserver:8888/eureka/


#数据源：
spring:
<<<<<<< HEAD
  cloud:
    stream:
      bindings:
        output:                                 # 频道名称（根据具体模块来命名）
          destination: insurance-topic-01
          binder: kafka_binder
      binders:
        kafka_binder:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder.brokers: ${kafka.brokers}
            spring.cloud.stream.kafka.binder.zk-nodes: ${kafka.zknodes}
  datasource:
    hikari:
      minimum-idle: ${datasource.jdbc.minIdle}
      maximum-pool-size: ${datasource.jdbc.maxPoolSize}
    driver-class-name: ${datasource.jdbc.driver}
    url: ${datasource.jdbc.url}
    username: ${datasource.jdbc.username}
    password: ${datasource.jdbc.password}
    type: ${datasource.jdbc.type}
  jpa:
    show-sql: false
    hibernate:
        ddl-auto: update
        naming:
          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
    properties:
      hibernate:
        dialect: ${datasource.jdbc.dialect}
        temp:
          use_jdbc_metadata_defaults: false #此处是为了解决启动时报错createClob()方法为实现
=======
  datasource:
    hikari: 
      minimum-idle: ${datasource.jdbc.minIdle}
      maximum-pool-size: ${datasource.jdbc.maxPoolSize}
    driver-class-name: org.postgresql.Driver
    url: ${datasource.jdbc.url}
    username: ${datasource.jdbc.username}
    password: ${datasource.jdbc.password}
    type: com.zaxxer.hikari.HikariDataSource
  jpa: 
    show-sql: false
    hibernate: 
        ddl-auto: update
        naming: 
          strategy : org.hibernate.cfg.ImprovedNamingStrategy  
    properties:  
      hibernate:  
#       dialect: com.microservice.persistence.SRDB10Dialect
        dialect: org.hibernate.dialect.PostgreSQLDialect
#       dialect: org.hibernate.dialect.MySQLDialect
          
>>>>>>> branch 'Mu' of http://10.167.200.10/microservice/strong-auth-crawler.git

